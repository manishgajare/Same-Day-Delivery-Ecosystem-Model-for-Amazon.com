/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Amazon.Admin;


import Business.Customer.CustomerAccount;
import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.Amazon;
import Business.Enterprise.Enterprise;
import Business.Network.CountryNetwork;
import Business.Network.RegionNetwork;
import Business.Network.StateNetwork;
import Business.Organization.Amazon.Admin.AmazonAdminOrganization;
import Business.Organization.Organization;
import Business.Role.Amazon.AmazonCustomerServiceEmployeeRole;
import Business.Role.Amazon.AmazonFinanceEmployeeRole;
import Business.Role.Amazon.AmazonInventoryEmployeeRole;
import Business.Role.Amazon.AmazonSalesEmployeeRole;
import Business.Role.Amazon.AmazonShipmentEmployeeRole;
import Business.UserAccount.UserAccount;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Manish Gajare
 */
public class AmazonAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AmazonAdminWorkAreaJPanel
     */

    JPanel userProcessContainer;
    UserAccount account; 
    AmazonAdminOrganization amazonAdminOrganization;
    Amazon enterprise;
    EcoSystem system;
    
    public AmazonAdminWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, AmazonAdminOrganization amazonAdminOrganization, Amazon enterprise,EcoSystem system) {
        initComponents();
        

        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.amazonAdminOrganization = amazonAdminOrganization;
        this.enterprise = enterprise;
        this.system = system;
        
        populateOrganizationJComboBox();
        
    }
    
    
     public void populateOrganizationJComboBox(){
      organizationJComboBox.removeAllItems();
   
 for(Organization organization: enterprise.getOrganizationDirectory().getOrganizationList())
 {  
       organizationJComboBox.addItem(organization);
 }   
  }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameJTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        passwordJTextField = new javax.swing.JTextField();
        organizationJComboBox = new javax.swing.JComboBox();
        createEmployeeJButton = new javax.swing.JButton();

        jLabel1.setText("Amazon Admin Work Area");

        nameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameJTextFieldKeyTyped(evt);
            }
        });

        jLabel3.setText("Name :");

        jLabel2.setText("Organization :");

        usernameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usernameJTextFieldKeyTyped(evt);
            }
        });

        jLabel4.setText("Username :");

        jLabel5.setText("Password :");

        passwordJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordJTextFieldKeyTyped(evt);
            }
        });

        organizationJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationJComboBoxActionPerformed(evt);
            }
        });

        createEmployeeJButton.setText("Create Employee");
        createEmployeeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createEmployeeJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(280, 280, 280)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(nameJTextField)
                                    .addComponent(organizationJComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(usernameJTextField)
                                    .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(createEmployeeJButton)))))
                .addContainerGap(266, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1)
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(organizationJComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(passwordJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(createEmployeeJButton)
                .addContainerGap(223, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void organizationJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationJComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_organizationJComboBoxActionPerformed

    private void createEmployeeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createEmployeeJButtonActionPerformed

        
        
         int count = 0;
       if( nameJTextField.getText().isEmpty() || passwordJTextField.getText().isEmpty() || usernameJTextField.getText().isEmpty() ){ 
     count++;
       }
        
       if(count==0){
                            // Get user name
        String userName = usernameJTextField.getText();
        // Get Password
        String password = String.valueOf(passwordJTextField.getText());

        //Step1: Check in the EcoSystem
        UserAccount userAccount = system.getUserAccountDirectory().authenticateUser(userName, password);
        //Step2: If user account is not in the system's user account directory
        
        Enterprise inEnterprise = null;
        Organization inOrganization = null;
    
        
        
        String countryName = null;
        if (userAccount == null) {
//            1
            
            
            
            
            
            for (CountryNetwork countryNetwork : system.getCountryNetworkList()) {
//              2  
            countryName = countryNetwork.getCountryName();
                
                for (StateNetwork stateNetwork : countryNetwork.getStateNetworkList()) {
//              3  
        
                
                for (RegionNetwork regionNetwork : stateNetwork.getRegionNetworkList()) {
//              4  
                    
                    
                    
                for (Enterprise enterprise : regionNetwork.getEnterpriseDirectory().getEnterpriseList()) {
//               5     
                    
                 
                    
                    if (enterprise.getUserAccountDirectory().authenticateUser(userName, password) != null) {
                    userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                        inEnterprise = enterprise;
                        
                    }else{
                        
                        
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                           
                            userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
                                if(userAccount!=null){
                                    inEnterprise = enterprise;
                                    inOrganization = organization;
                                   break;
                                    
                                    }
                            
                            }
                   
                        
                    } 
                    
               if (inEnterprise != null) {
                        break;
                    }
                   
               
                
                
         //       5  
                }
                
                if (inEnterprise != null) {
                        break;
                    }
                
                
           
                
        //           4     
                    }
        
                  
                
     //           3     
                }
                
                     
                
//           2     
            }
            
                   
        
 //    1       
        }
        

       
        
        
        
        
        
        CustomerAccount customerAccount=null;
       Amazon amazon = null; 
      if (userAccount == null && customerAccount==null) {
//            1
            
            
            
            for (CountryNetwork countryNetwork : system.getCountryNetworkList()) {
//              2  
            countryName = countryNetwork.getCountryName();
                
                for (StateNetwork stateNetwork : countryNetwork.getStateNetworkList()) {
//              3  
        
                
                for (RegionNetwork regionNetwork : stateNetwork.getRegionNetworkList()) {
//              4  
                    
                    
                    
                for (Enterprise enterprise : regionNetwork.getEnterpriseDirectory().getEnterpriseList()) {
//               5     
      
                    
                    
                 
          if(enterprise instanceof Amazon){
           amazon = (Amazon)enterprise;
              
           inEnterprise = amazon;
           

           if(amazon.getCustomerAccountDirectory().authenticateCustomer(userName, password)!=null){
               
           customerAccount = amazon.getCustomerAccountDirectory().authenticateCustomer(userName, password);
           
           break;
             }      
          
           
        }          
                    
               
                   
               
                
                
         //       5  
                }
                
                if(inEnterprise!=null)
                    break;
                 
           
                
        //           4     
                    }
        
                if(inEnterprise!=null)
                    break;
                 
                
     //           3     
                }
                
                if(inEnterprise!=null)
                    break;
                 
                
//           2     
            }
            
            
        
 //    1       
        }
          
//.............................................................................................
      
   
      
      
      
      
      
      
      
      
ArrayList<CountryNetwork> countryNetworkList = system.getCountryNetworkList();
        Amazon amazonEnterprise = null; 
        
        for(int i=0;i<countryNetworkList.size();i++){
        
       try {
        if(countryNetworkList.get(i).getCountryName().equals(countryName))    
        {
        ArrayList<StateNetwork> stateNetworkList = countryNetworkList.get(i).getStateNetworkList();
        
        
        for(int j=0;j<stateNetworkList.size();j++){
        
       
        ArrayList<RegionNetwork> regionNetworkList = stateNetworkList.get(j).getRegionNetworkList();
        
        
        
        
        for(int k=0;k<regionNetworkList.size();k++){
        
        
        
      ArrayList<Enterprise> enterpriseList = regionNetworkList.get(k).getEnterpriseDirectory().getEnterpriseList();  
        
       
      for(int l=0;l<enterpriseList.size();l++){
        
          if(enterpriseList.get(l) instanceof Amazon){
             amazonEnterprise = (Amazon)enterpriseList.get(l);
             
          
        }
        
      

      
   
        
        }
        
        }
        
        

        
        
        
        
        
        }
        

        
        }
        
       } catch (NullPointerException e){}
        
        }
              
      
        
        if (userAccount == null && customerAccount==null) {
        Organization org = (Organization)organizationJComboBox.getSelectedItem();
        Employee employee =org.getEmployeeDirectory().createEmployee(nameJTextField.getText());
  
        if(organizationJComboBox.getSelectedItem().toString().equals(Organization.Type.AmazonInventory.getValue().toString())){
            org.getUserAccountDirectory().createUserAccount(usernameJTextField.getText(), passwordJTextField.getText(), employee, new AmazonInventoryEmployeeRole());
        }
        else if(organizationJComboBox.getSelectedItem().toString().equals(Organization.Type.AmazonFinance.getValue().toString())){
            org.getUserAccountDirectory().createUserAccount(usernameJTextField.getText(), passwordJTextField.getText(), employee, new AmazonFinanceEmployeeRole());
        }
        else if(organizationJComboBox.getSelectedItem().toString().equals(Organization.Type.AmazonSales.getValue().toString())){
            org.getUserAccountDirectory().createUserAccount(usernameJTextField.getText(), passwordJTextField.getText(), employee, new AmazonSalesEmployeeRole());
        }
        else if(organizationJComboBox.getSelectedItem().toString().equals(Organization.Type.AmazonShipment.getValue().toString())){
            org.getUserAccountDirectory().createUserAccount(usernameJTextField.getText(), passwordJTextField.getText(), employee, new AmazonShipmentEmployeeRole());
        }
        else if(organizationJComboBox.getSelectedItem().toString().equals(Organization.Type.AmazonCustomerService.getValue().toString())){
            org.getUserAccountDirectory().createUserAccount(usernameJTextField.getText(), passwordJTextField.getText(), employee, new AmazonCustomerServiceEmployeeRole());
        }



        nameJTextField.setText(null);
        usernameJTextField.setText(null);
        passwordJTextField.setText(null);

        populateOrganizationJComboBox();

        
        }
      
      else{
          
          
          JOptionPane.showMessageDialog(null, "Please use Different Username. Username already used.");
          
          
      }
      
      
      
      
           
       }
       else{
       
           JOptionPane.showMessageDialog(null, "Please fill all the fields");
           
       }
       
        
        
    }//GEN-LAST:event_createEmployeeJButtonActionPerformed

    private void nameJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameJTextFieldKeyTyped

       char c =evt.getKeyChar();
       if(!(Character.isAlphabetic(c) || (c== KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)) ){
           evt.consume();
       } 
        
    }//GEN-LAST:event_nameJTextFieldKeyTyped

    private void usernameJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameJTextFieldKeyTyped

        char c =evt.getKeyChar();
       if(((c==KeyEvent.VK_SPACE) ) ){
           evt.consume();
       }
        
    }//GEN-LAST:event_usernameJTextFieldKeyTyped

    private void passwordJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordJTextFieldKeyTyped

        char c =evt.getKeyChar();
       if(((c==KeyEvent.VK_SPACE) ) ){
           evt.consume();
       }
        
    }//GEN-LAST:event_passwordJTextFieldKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createEmployeeJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField nameJTextField;
    private javax.swing.JComboBox organizationJComboBox;
    private javax.swing.JTextField passwordJTextField;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
