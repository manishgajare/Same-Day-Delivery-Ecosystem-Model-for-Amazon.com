/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Customer.CustomerAccount;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Amazon;
import Business.Enterprise.Enterprise;
import Business.Network.CountryNetwork;
import Business.Network.RegionNetwork;
import Business.Network.StateNetwork;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Interface.Customer.CustomerRole.CustomerWorkAreaJPanel;
import Interface.Customer.CustomerSignUp.SignUpJPanel;
import Interface.Market.BrowseJPanel;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;



/**
 *
 * @author Manish Gajare
 */
public class MainJFrame extends javax.swing.JFrame {


    /**
     * Creates new form MainJFrame
     */
    
    private EcoSystem system;
    private DB4OUtil db4OUtil = new DB4OUtil();
    public static final double PI = 3.14159265;
    public static final double deg2radians = PI/180.0;
    public static final int earthRadius = 3959;
    
    public MainJFrame() {
        initComponents();
       
            system = db4OUtil.retrieveSystem();     
    
            logoutJButton.setVisible(false);
   
            loginJButton.setVisible(true);
            usernameJLabel.setVisible(true);
            passwordJLabel.setVisible(true);
            usernameJTextField.setVisible(true);
            passwordJPasswordField.setVisible(true);
            
            
        BrowseJPanel bjp = new BrowseJPanel(userProcessContainer,system,db4OUtil);
        userProcessContainer.add("BrowseJPanel", bjp);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);   
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        leftJPanel = new javax.swing.JPanel();
        usernameJLabel = new javax.swing.JLabel();
        usernameJTextField = new javax.swing.JTextField();
        passwordJLabel = new javax.swing.JLabel();
        passwordJPasswordField = new javax.swing.JPasswordField();
        loginJButton = new javax.swing.JButton();
        logoutJButton = new javax.swing.JButton();
        signUpJButton = new javax.swing.JButton();
        userProcessContainer = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(150);

        usernameJLabel.setText("Username");

        usernameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                usernameJTextFieldKeyTyped(evt);
            }
        });

        passwordJLabel.setText("Password");

        passwordJPasswordField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                passwordJPasswordFieldKeyTyped(evt);
            }
        });

        loginJButton.setText("Login");
        loginJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginJButtonActionPerformed(evt);
            }
        });

        logoutJButton.setText("Logout");
        logoutJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutJButtonActionPerformed(evt);
            }
        });

        signUpJButton.setText("SignUp");
        signUpJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signUpJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftJPanelLayout = new javax.swing.GroupLayout(leftJPanel);
        leftJPanel.setLayout(leftJPanelLayout);
        leftJPanelLayout.setHorizontalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftJPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(passwordJLabel)
                    .addComponent(usernameJLabel)
                    .addComponent(usernameJTextField)
                    .addComponent(passwordJPasswordField)
                    .addComponent(loginJButton, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE)
                    .addComponent(logoutJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(signUpJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        leftJPanelLayout.setVerticalGroup(
            leftJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftJPanelLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(usernameJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordJLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordJPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(loginJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logoutJButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(signUpJButton)
                .addContainerGap(431, Short.MAX_VALUE))
        );

        jSplitPane1.setLeftComponent(leftJPanel);

        userProcessContainer.setLayout(new java.awt.CardLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1172, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 648, Short.MAX_VALUE)
        );

        userProcessContainer.add(jPanel1, "card2");

        jSplitPane1.setRightComponent(userProcessContainer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loginJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginJButtonActionPerformed


        
        
                  // Get user name
        String userName = usernameJTextField.getText();
        // Get Password
        char[] passwordCharArray = passwordJPasswordField.getPassword();
        String password = String.valueOf(passwordCharArray);
        
        
                     int count = 0;
   
    if( password.isEmpty() || userName.isEmpty() ){ 
     count++;
       }
        
       if(count==0){
        
        

        //Step1: Check in the EcoSystem
        UserAccount userAccount = system.getUserAccountDirectory().authenticateUser(userName, password);
        //Step2: If user account is not in the system's user account directory
        
        Enterprise inEnterprise = null;
        Organization inOrganization = null;
    
        
        
        String countryName = null;
        if (userAccount == null) {
//            1
            
            
            
            
            
            for (CountryNetwork countryNetwork : system.getCountryNetworkList()) {
//              2  
            countryName = countryNetwork.getCountryName();
                
                for (StateNetwork stateNetwork : countryNetwork.getStateNetworkList()) {
//              3  
        
                
                for (RegionNetwork regionNetwork : stateNetwork.getRegionNetworkList()) {
//              4  
                    
                    
                    
                for (Enterprise enterprise : regionNetwork.getEnterpriseDirectory().getEnterpriseList()) {
//               5     
                    
                 
                    
                    if (enterprise.getUserAccountDirectory().authenticateUser(userName, password) != null) {
                    userAccount = enterprise.getUserAccountDirectory().authenticateUser(userName, password);
                        inEnterprise = enterprise;
                        
                    }else{
                        
                        
                        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                           
                            userAccount = organization.getUserAccountDirectory().authenticateUser(userName, password);
                                if(userAccount!=null){
                                    inEnterprise = enterprise;
                                    inOrganization = organization;
                                   break;
                                    
                                    }
                            
                            }
                   
                        
                    } 
                    
               if (inEnterprise != null) {
                        break;
                    }
                   
               
                
                
         //       5  
                }
                
                if (inEnterprise != null) {
                        break;
                    }
                
                
           
                
        //           4     
                    }
        
                  
                
     //           3     
                }
                
                     
                
//           2     
            }
            
                   
        
 //    1       
        }
        

       
        
        
        
        
        
        CustomerAccount customerAccount=null;
       Amazon amazon = null; 
      if (userAccount == null && customerAccount==null) {
//            1
            
            
            
            for (CountryNetwork countryNetwork : system.getCountryNetworkList()) {
//              2  
            countryName = countryNetwork.getCountryName();
                
                for (StateNetwork stateNetwork : countryNetwork.getStateNetworkList()) {
//              3  
        
                
                for (RegionNetwork regionNetwork : stateNetwork.getRegionNetworkList()) {
//              4  
                    
                    
                    
                for (Enterprise enterprise : regionNetwork.getEnterpriseDirectory().getEnterpriseList()) {
//               5     
      
                    
                    
                 
          if(enterprise instanceof Amazon){
           amazon = (Amazon)enterprise;
              
           inEnterprise = amazon;
           

           if(amazon.getCustomerAccountDirectory().authenticateCustomer(userName, password)!=null){
               
           customerAccount = amazon.getCustomerAccountDirectory().authenticateCustomer(userName, password);
           
           break;
             }      
          
           
        }          
                    
               
                   
               
                
                
         //       5  
                }
                
                if(inEnterprise!=null)
                    break;
                 
           
                
        //           4     
                    }
        
                if(inEnterprise!=null)
                    break;
                 
                
     //           3     
                }
                
                if(inEnterprise!=null)
                    break;
                 
                
//           2     
            }
            
            
        
 //    1       
        }
          
//.............................................................................................
      
   
      
      
      
      
      
      
      
      
ArrayList<CountryNetwork> countryNetworkList = system.getCountryNetworkList();
        Amazon amazonEnterprise = null; 
        
        for(int i=0;i<countryNetworkList.size();i++){
        
       try {
        if(countryNetworkList.get(i).getCountryName().equals(countryName))    
        {
        ArrayList<StateNetwork> stateNetworkList = countryNetworkList.get(i).getStateNetworkList();
        
        
        for(int j=0;j<stateNetworkList.size();j++){
        
       
        ArrayList<RegionNetwork> regionNetworkList = stateNetworkList.get(j).getRegionNetworkList();
        
        
        
        
        for(int k=0;k<regionNetworkList.size();k++){
        
        
        
      ArrayList<Enterprise> enterpriseList = regionNetworkList.get(k).getEnterpriseDirectory().getEnterpriseList();  
        
       
      for(int l=0;l<enterpriseList.size();l++){
        
          if(enterpriseList.get(l) instanceof Amazon){
             amazonEnterprise = (Amazon)enterpriseList.get(l);
             
          
        }
        
      

      
   
        
        }
        
        }
        
        

        
        
        
        
        
        }
        

        
        }
        
       } catch (NullPointerException e){}
        
        }
              
      
      
      
      
      
      
      
      
      
        
//..............................................................................................      
      
        if (userAccount == null && customerAccount==null) {
            JOptionPane.showMessageDialog(null, "Invalid Credentials!");
        } else {
            
            if(userAccount!=null && customerAccount==null){
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            userProcessContainer.add("workArea", userAccount.getRole().createWorkArea(userProcessContainer, userAccount,inOrganization, inEnterprise, system,db4OUtil,amazonEnterprise));
            layout.next(userProcessContainer);
            }
            else if(userAccount == null && customerAccount!=null){
            
        CustomerWorkAreaJPanel cwajp = new CustomerWorkAreaJPanel(userProcessContainer,system,customerAccount,db4OUtil,amazonEnterprise);
        userProcessContainer.add("CustomerWorkAreaJPanel", cwajp);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);    
                        
            }
            
            logoutJButton.setVisible(true);
            
            loginJButton.setVisible(false);
            usernameJLabel.setVisible(false);
            passwordJLabel.setVisible(false);
            usernameJTextField.setVisible(false);
            passwordJPasswordField.setVisible(false);
            signUpJButton.setVisible(false);
            
            
        }

        
       }   
       else{
           
           JOptionPane.showMessageDialog(null, "Please fill all the fields");
           
       }
        
    }//GEN-LAST:event_loginJButtonActionPerformed

    private void logoutJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutJButtonActionPerformed

        
        userProcessContainer.removeAll();
        userProcessContainer.repaint();
        
        BrowseJPanel bjp = new BrowseJPanel(userProcessContainer,system,db4OUtil);
        userProcessContainer.add("BrowseJPanel", bjp);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);  
        
        
        
        usernameJTextField.setText("");
        passwordJPasswordField.setText("");
        db4OUtil.storeSystem(system);
        
            logoutJButton.setVisible(false);
            
            loginJButton.setVisible(true);
            usernameJLabel.setVisible(true);
            passwordJLabel.setVisible(true);
            usernameJTextField.setVisible(true);
            passwordJPasswordField.setVisible(true);
            
            signUpJButton.setVisible(true);
            
        
    }//GEN-LAST:event_logoutJButtonActionPerformed

    private void signUpJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signUpJButtonActionPerformed

       SignUpJPanel sujp = new SignUpJPanel(userProcessContainer,system,db4OUtil);
        userProcessContainer.add("SignUpJPanel", sujp);
        
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer);
        
        
        
    }//GEN-LAST:event_signUpJButtonActionPerformed

    private void usernameJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usernameJTextFieldKeyTyped
        
        char c =evt.getKeyChar();
       if(((c==KeyEvent.VK_SPACE) ) ){
           evt.consume();
       }
        
    }//GEN-LAST:event_usernameJTextFieldKeyTyped

    private void passwordJPasswordFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordJPasswordFieldKeyTyped
        
        char c =evt.getKeyChar();
       if(((c==KeyEvent.VK_SPACE) ) ){
           evt.consume();
       }
        
    }//GEN-LAST:event_passwordJPasswordFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel leftJPanel;
    private javax.swing.JButton loginJButton;
    private javax.swing.JButton logoutJButton;
    private javax.swing.JLabel passwordJLabel;
    private javax.swing.JPasswordField passwordJPasswordField;
    private javax.swing.JButton signUpJButton;
    private javax.swing.JPanel userProcessContainer;
    private javax.swing.JLabel usernameJLabel;
    private javax.swing.JTextField usernameJTextField;
    // End of variables declaration//GEN-END:variables
}
