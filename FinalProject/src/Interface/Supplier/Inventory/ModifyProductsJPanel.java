/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Supplier.Inventory;

import Business.DB4OUtil.DB4OUtil;
import Business.Enterprise.Supplier;
import Business.Organization.Amazon.Inventory.ProductCatalogList;
import Business.Organization.Supplier.Inventory.Product;
import Business.Organization.Supplier.Inventory.SupplierInventoryOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manish Gajare
 */
public class ModifyProductsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ModifyProductsJPanel
     */
    
    JPanel userProcessContainer; 
    UserAccount account; 
    SupplierInventoryOrganization inventoryOrganization;
    ProductCatalogList productCatalogList;
    DB4OUtil db4OUtil;
    Supplier enterprise;
    String categoryName;
    String subCategoryName;
    
    
    public ModifyProductsJPanel(JPanel userProcessContainer, UserAccount account, SupplierInventoryOrganization inventoryOrganization,ProductCatalogList productCatalogList, DB4OUtil db4OUtil,Supplier enterprise, String categoryName, String subCategoryName) {
        initComponents();
        
    this.userProcessContainer = userProcessContainer; 
    this.account = account; 
    this.inventoryOrganization = inventoryOrganization;
    this.productCatalogList = productCatalogList;
    this.db4OUtil = db4OUtil;    
    this.enterprise = enterprise;
    this.categoryName = categoryName;
    this.subCategoryName = subCategoryName;
        
   populateProductJTable();
   
   
   addItemsAvailableJLabel.setVisible(false);
   addItemsAvailableJTextField.setVisible(false);
   addNameJLabel.setVisible(false);
   addNameJTextField.setVisible(false);
   addPriceJLabel.setVisible(false);
   addPriceJTextField.setVisible(false);
   addProductActiveJRadioButton.setVisible(false);
   addProductInactiveJRadioButton.setVisible(false);
   addProductIDJLabel.setVisible(false);
   addProductIDJTextField.setVisible(false);
   addProductSubmitJButton.setVisible(false);
   
   editItemsAvailableJLabel.setVisible(false);
   editItemsAvailableJTextField.setVisible(false);
   editNameJLabel.setVisible(false);
   editNameJTextField.setVisible(false);
   editPriceJLabel.setVisible(false);
   editPriceJTextField.setVisible(false);
   editProductActiveJRadioButton.setVisible(false);
   editProductInactiveJRadioButton.setVisible(false);
   editProductIDJLabel.setVisible(false);
   editProductIDJTextField.setVisible(false);
   editProductSubmitJButton.setVisible(false);
   
   editProductJButton.setEnabled(false);
   deleteProductJButton.setEnabled(false);
   

    }
    
    
    
    
        public void populateProductJTable()
    {
        
        deleteProductJButton.setEnabled(false);
        
        
        int rowCount = productJTable.getRowCount();
        for(int i=rowCount-1; i>=0; i--){
            ((DefaultTableModel)productJTable.getModel()).removeRow(i);
        }
        
        for(int i=0;inventoryOrganization.getProductCatalog().getProductList().size()>i;i++){
            System.out.println("size : "+inventoryOrganization.getProductCatalog().getProductList().size());    
            if(inventoryOrganization.getProductCatalog().getProductList().get(i).getCategory().toString().equals(this.categoryName) && inventoryOrganization.getProductCatalog().getProductList().get(i).getSubCategory().toString().equals(this.subCategoryName))
            {
                Product p = inventoryOrganization.getProductCatalog().getProductList().get(i);
                System.out.println("p : "+p);
                Object row[] = new Object[5];
                row[0] = p.getProductId();
                row[1] = p;
                row[2] = p.getAvailability();
                row[3] = p.getPrice();
                row[4] = p.getStatus();
                
            ((DefaultTableModel)productJTable.getModel()).addRow(row); 
                
            }
        }
        
        
        
        
        System.out.println(inventoryOrganization.getProductCatalog().getProductList());
        
  
    }
    
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editPriceJLabel = new javax.swing.JLabel();
        editProductSubmitJButton = new javax.swing.JButton();
        editProductActiveJRadioButton = new javax.swing.JRadioButton();
        editItemsAvailableJTextField = new javax.swing.JTextField();
        editNameJTextField = new javax.swing.JTextField();
        editProductJButton = new javax.swing.JButton();
        editProductInactiveJRadioButton = new javax.swing.JRadioButton();
        addProductJButton = new javax.swing.JButton();
        editProductIDJTextField = new javax.swing.JTextField();
        editNameJLabel = new javax.swing.JLabel();
        editItemsAvailableJLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        productJTable = new javax.swing.JTable();
        editPriceJTextField = new javax.swing.JTextField();
        editProductIDJLabel = new javax.swing.JLabel();
        addNameJLabel = new javax.swing.JLabel();
        addProductIDJLabel = new javax.swing.JLabel();
        addPriceJLabel = new javax.swing.JLabel();
        addItemsAvailableJLabel = new javax.swing.JLabel();
        addProductIDJTextField = new javax.swing.JTextField();
        addNameJTextField = new javax.swing.JTextField();
        addItemsAvailableJTextField = new javax.swing.JTextField();
        addPriceJTextField = new javax.swing.JTextField();
        addProductSubmitJButton = new javax.swing.JButton();
        addProductActiveJRadioButton = new javax.swing.JRadioButton();
        addProductInactiveJRadioButton = new javax.swing.JRadioButton();
        deleteProductJButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        editPriceJLabel.setText("Price :");
        add(editPriceJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 399, -1, -1));

        editProductSubmitJButton.setText("Submit");
        editProductSubmitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProductSubmitJButtonActionPerformed(evt);
            }
        });
        add(editProductSubmitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(509, 475, -1, -1));

        editProductActiveJRadioButton.setSelected(true);
        editProductActiveJRadioButton.setText("active");
        add(editProductActiveJRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(456, 434, -1, -1));

        editItemsAvailableJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                editItemsAvailableJTextFieldKeyTyped(evt);
            }
        });
        add(editItemsAvailableJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 358, 118, -1));

        editNameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                editNameJTextFieldKeyTyped(evt);
            }
        });
        add(editNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 320, 118, -1));

        editProductJButton.setText("Edit Product");
        editProductJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editProductJButtonActionPerformed(evt);
            }
        });
        add(editProductJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 230, -1, -1));

        editProductInactiveJRadioButton.setText("inactive");
        add(editProductInactiveJRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(557, 434, -1, -1));

        addProductJButton.setText("Add Product");
        addProductJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductJButtonActionPerformed(evt);
            }
        });
        add(addProductJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, -1, -1));

        editProductIDJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                editProductIDJTextFieldKeyTyped(evt);
            }
        });
        add(editProductIDJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 282, 118, -1));

        editNameJLabel.setText("Name :");
        add(editNameJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 323, -1, -1));

        editItemsAvailableJLabel.setText("Items Available :");
        add(editItemsAvailableJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 361, -1, -1));

        productJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Product ID", "Name", "Items Available", "Price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productJTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(productJTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 41, 800, 167));

        editPriceJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                editPriceJTextFieldKeyTyped(evt);
            }
        });
        add(editPriceJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(529, 396, 118, -1));

        editProductIDJLabel.setText("Product ID :");
        add(editProductIDJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 285, -1, -1));

        addNameJLabel.setText("Name :");
        add(addNameJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 323, -1, -1));

        addProductIDJLabel.setText("Product ID :");
        add(addProductIDJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 285, -1, -1));

        addPriceJLabel.setText("Price :");
        add(addPriceJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 399, -1, -1));

        addItemsAvailableJLabel.setText("Items Available :");
        add(addItemsAvailableJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 361, -1, -1));

        addProductIDJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addProductIDJTextFieldKeyTyped(evt);
            }
        });
        add(addProductIDJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 282, 118, -1));

        addNameJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addNameJTextFieldKeyTyped(evt);
            }
        });
        add(addNameJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 320, 118, -1));

        addItemsAvailableJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addItemsAvailableJTextFieldKeyTyped(evt);
            }
        });
        add(addItemsAvailableJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 358, 118, -1));

        addPriceJTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addPriceJTextFieldKeyTyped(evt);
            }
        });
        add(addPriceJTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 396, 118, -1));

        addProductSubmitJButton.setText("Submit");
        addProductSubmitJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addProductSubmitJButtonActionPerformed(evt);
            }
        });
        add(addProductSubmitJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(204, 475, -1, -1));

        addProductActiveJRadioButton.setSelected(true);
        addProductActiveJRadioButton.setText("active");
        add(addProductActiveJRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(151, 434, -1, -1));

        addProductInactiveJRadioButton.setText("inactive");
        add(addProductInactiveJRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(252, 434, -1, -1));

        deleteProductJButton.setText("Delete Product");
        deleteProductJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductJButtonActionPerformed(evt);
            }
        });
        add(deleteProductJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 230, -1, -1));

        jButton1.setText("<< BACK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 504, -1, -1));

        jButton2.setText("Clear All");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 500, 100, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void addProductSubmitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductSubmitJButtonActionPerformed

        
     int count = 0;
       if( addProductIDJTextField.getText().isEmpty() || addNameJTextField.getText().isEmpty() || addItemsAvailableJTextField.getText().isEmpty() || addPriceJTextField.getText().isEmpty() ){ 
     count++;
       }
        
       if(count==0){ 
        
        
        
      
        String status = null;
        if(addProductActiveJRadioButton.isSelected())
        {
            status = addProductActiveJRadioButton.getText().toString();
        }   else if(addProductInactiveJRadioButton.isSelected())
        {
            status = addProductInactiveJRadioButton.getText().toString();
        }

        inventoryOrganization.getProductCatalog().createAndAddProduct(addProductIDJTextField.getText(),addNameJTextField.getText(), Float.parseFloat(addPriceJTextField.getText()), Integer.parseInt(addItemsAvailableJTextField.getText()), status, this.categoryName, this.subCategoryName);
        productCatalogList.createAndAddProduct(inventoryOrganization.getProductCatalog().getProductList(), enterprise);


        
        populateProductJTable();
        
        
        
   addItemsAvailableJLabel.setVisible(false);
   addItemsAvailableJTextField.setVisible(false);
   addNameJLabel.setVisible(false);
   addNameJTextField.setVisible(false);
   addPriceJLabel.setVisible(false);
   addPriceJTextField.setVisible(false);
   addProductActiveJRadioButton.setVisible(false);
   addProductInactiveJRadioButton.setVisible(false);
   addProductIDJLabel.setVisible(false);
   addProductIDJTextField.setVisible(false);
   addProductSubmitJButton.setVisible(false);
   
   editItemsAvailableJLabel.setVisible(false);
   editItemsAvailableJTextField.setVisible(false);
   editNameJLabel.setVisible(false);
   editNameJTextField.setVisible(false);
   editPriceJLabel.setVisible(false);
   editPriceJTextField.setVisible(false);
   editProductActiveJRadioButton.setVisible(false);
   editProductInactiveJRadioButton.setVisible(false);
   editProductIDJLabel.setVisible(false);
   editProductIDJTextField.setVisible(false);
   editProductSubmitJButton.setVisible(false);
        
    addItemsAvailableJTextField.setText(null);
   addNameJTextField.setText(null);
   addPriceJTextField.setText(null);
   addProductIDJTextField.setText(null);
   
   editItemsAvailableJTextField.setText(null);
   editNameJTextField.setText(null);
   editPriceJTextField.setText(null);
   editProductIDJTextField.setText(null);    

   
   
       }
       else{
           
           JOptionPane.showMessageDialog(null, "Please fill all the fields");
           
       }
       
       
    }//GEN-LAST:event_addProductSubmitJButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        ManageProductCatalogJPanel mpcjp = new ManageProductCatalogJPanel(userProcessContainer,account,inventoryOrganization,productCatalogList,db4OUtil,enterprise);
        userProcessContainer.add("ManageProductCatalogJPanel", mpcjp);
        CardLayout cardLayout = (CardLayout) userProcessContainer.getLayout();
        cardLayout.next(userProcessContainer); 
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void addProductJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addProductJButtonActionPerformed

        
   addItemsAvailableJLabel.setVisible(true);
   addItemsAvailableJTextField.setVisible(true);
   addNameJLabel.setVisible(true);
   addNameJTextField.setVisible(true);
   addPriceJLabel.setVisible(true);
   addPriceJTextField.setVisible(true);
   addProductActiveJRadioButton.setVisible(true);
   addProductInactiveJRadioButton.setVisible(true);
   addProductIDJLabel.setVisible(true);
   addProductIDJTextField.setVisible(true);
   addProductSubmitJButton.setVisible(true);
   
   
   editItemsAvailableJLabel.setVisible(false);
   editItemsAvailableJTextField.setVisible(false);
   editNameJLabel.setVisible(false);
   editNameJTextField.setVisible(false);
   editPriceJLabel.setVisible(false);
   editPriceJTextField.setVisible(false);
   editProductActiveJRadioButton.setVisible(false);
   editProductInactiveJRadioButton.setVisible(false);
   editProductIDJLabel.setVisible(false);
   editProductIDJTextField.setVisible(false);
   editProductSubmitJButton.setVisible(false);
        
  

        
    }//GEN-LAST:event_addProductJButtonActionPerformed

    private void editProductJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProductJButtonActionPerformed

        
   addItemsAvailableJLabel.setVisible(false);
   addItemsAvailableJTextField.setVisible(false);
   addNameJLabel.setVisible(false);
   addNameJTextField.setVisible(false);
   addPriceJLabel.setVisible(false);
   addPriceJTextField.setVisible(false);
   addProductActiveJRadioButton.setVisible(false);
   addProductInactiveJRadioButton.setVisible(false);
   addProductIDJLabel.setVisible(false);
   addProductIDJTextField.setVisible(false);
   addProductSubmitJButton.setVisible(false);  
        
   editItemsAvailableJLabel.setVisible(true);
   editItemsAvailableJTextField.setVisible(true);
   editNameJLabel.setVisible(true);
   editNameJTextField.setVisible(true);
   editPriceJLabel.setVisible(true);
   editPriceJTextField.setVisible(true);
   editProductActiveJRadioButton.setVisible(true);
   editProductInactiveJRadioButton.setVisible(true);
   editProductIDJLabel.setVisible(true);
   editProductIDJTextField.setVisible(true);
   editProductSubmitJButton.setVisible(true);   
   
   
   Product product = (Product)productJTable.getValueAt(productJTable.getSelectedRow(), 1);
   
   editProductIDJTextField.setText(product.getProductId());
   editNameJTextField.setText(product.getName());
   editPriceJTextField.setText(String.valueOf(product.getPrice()));
   editItemsAvailableJTextField.setText(String.valueOf(product.getAvailability()));
   if(product.getStatus().equals("active"))
   {
       editProductActiveJRadioButton.setSelected(true);
       editProductInactiveJRadioButton.setSelected(false);
   } if(product.getStatus().equals("inactive"))
   {
       editProductActiveJRadioButton.setSelected(false);
       editProductInactiveJRadioButton.setSelected(true);
   }
   
   
        
    }//GEN-LAST:event_editProductJButtonActionPerformed

    private void editProductSubmitJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editProductSubmitJButtonActionPerformed

        
        int count = 0;
       if( editProductIDJTextField.getText().isEmpty() || editNameJTextField.getText().isEmpty() || editItemsAvailableJTextField.getText().isEmpty() || editPriceJTextField.getText().isEmpty() ){ 
     count++;
       }
        
       if(count==0){ 
        
        
        
        
     Product product = (Product)productJTable.getValueAt(productJTable.getSelectedRow(), 1);
      
      product.setProductId(editProductIDJTextField.getText());
      product.setName(editNameJTextField.getText());
      product.setPrice(Float.parseFloat(editPriceJTextField.getText()));
      product.setAvailability(Integer.parseInt(editItemsAvailableJTextField.getText()));
      if(editProductActiveJRadioButton.isSelected())
         product.setStatus("active");
      else if(editProductInactiveJRadioButton.isSelected())
         product.setStatus("inactive");
        
        
      populateProductJTable();
        
   addItemsAvailableJLabel.setVisible(false);
   addItemsAvailableJTextField.setVisible(false);
   addNameJLabel.setVisible(false);
   addNameJTextField.setVisible(false);
   addPriceJLabel.setVisible(false);
   addPriceJTextField.setVisible(false);
   addProductActiveJRadioButton.setVisible(false);
   addProductInactiveJRadioButton.setVisible(false);
   addProductIDJLabel.setVisible(false);
   addProductIDJTextField.setVisible(false);
   addProductSubmitJButton.setVisible(false);
   
   editItemsAvailableJLabel.setVisible(false);
   editItemsAvailableJTextField.setVisible(false);
   editNameJLabel.setVisible(false);
   editNameJTextField.setVisible(false);
   editPriceJLabel.setVisible(false);
   editPriceJTextField.setVisible(false);
   editProductActiveJRadioButton.setVisible(false);
   editProductInactiveJRadioButton.setVisible(false);
   editProductIDJLabel.setVisible(false);
   editProductIDJTextField.setVisible(false);
   editProductSubmitJButton.setVisible(false);  
    
   addItemsAvailableJTextField.setText(null);
   addNameJTextField.setText(null);
   addPriceJTextField.setText(null);
   addProductIDJTextField.setText(null);
   
   editItemsAvailableJTextField.setText(null);
   editNameJTextField.setText(null);
   editPriceJTextField.setText(null);
   editProductIDJTextField.setText(null);
   
       }
       else{
           
           JOptionPane.showMessageDialog(null, "Please fill all the fields");
           
       }
       
       
        
    }//GEN-LAST:event_editProductSubmitJButtonActionPerformed

    private void deleteProductJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductJButtonActionPerformed

      Product product = (Product)productJTable.getValueAt(productJTable.getSelectedRow(), 1);
        
       inventoryOrganization.getProductCatalog().removeProduct(product);

       populateProductJTable();
       
   addItemsAvailableJLabel.setVisible(false);
   addItemsAvailableJTextField.setVisible(false);
   addNameJLabel.setVisible(false);
   addNameJTextField.setVisible(false);
   addPriceJLabel.setVisible(false);
   addPriceJTextField.setVisible(false);
   addProductActiveJRadioButton.setVisible(false);
   addProductInactiveJRadioButton.setVisible(false);
   addProductIDJLabel.setVisible(false);
   addProductIDJTextField.setVisible(false);
   addProductSubmitJButton.setVisible(false);
   
   editItemsAvailableJLabel.setVisible(false);
   editItemsAvailableJTextField.setVisible(false);
   editNameJLabel.setVisible(false);
   editNameJTextField.setVisible(false);
   editPriceJLabel.setVisible(false);
   editPriceJTextField.setVisible(false);
   editProductActiveJRadioButton.setVisible(false);
   editProductInactiveJRadioButton.setVisible(false);
   editProductIDJLabel.setVisible(false);
   editProductIDJTextField.setVisible(false);
   editProductSubmitJButton.setVisible(false);  
        
        
    }//GEN-LAST:event_deleteProductJButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        
   addItemsAvailableJLabel.setVisible(false);
   addItemsAvailableJTextField.setVisible(false);
   addNameJLabel.setVisible(false);
   addNameJTextField.setVisible(false);
   addPriceJLabel.setVisible(false);
   addPriceJTextField.setVisible(false);
   addProductActiveJRadioButton.setVisible(false);
   addProductInactiveJRadioButton.setVisible(false);
   addProductIDJLabel.setVisible(false);
   addProductIDJTextField.setVisible(false);
   addProductSubmitJButton.setVisible(false);
   
   editItemsAvailableJLabel.setVisible(false);
   editItemsAvailableJTextField.setVisible(false);
   editNameJLabel.setVisible(false);
   editNameJTextField.setVisible(false);
   editPriceJLabel.setVisible(false);
   editPriceJTextField.setVisible(false);
   editProductActiveJRadioButton.setVisible(false);
   editProductInactiveJRadioButton.setVisible(false);
   editProductIDJLabel.setVisible(false);
   editProductIDJTextField.setVisible(false);
   editProductSubmitJButton.setVisible(false);  
   
   
   addItemsAvailableJTextField.setText(null);
   addNameJTextField.setText(null);
   addPriceJTextField.setText(null);
   addProductIDJTextField.setText(null);
   
   editItemsAvailableJTextField.setText(null);
   editNameJTextField.setText(null);
   editPriceJTextField.setText(null);
   editProductIDJTextField.setText(null);
       
   populateProductJTable();
      
   editProductJButton.setEnabled(false);
   deleteProductJButton.setEnabled(false);
      
    }//GEN-LAST:event_jButton2ActionPerformed

    private void productJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productJTableMouseClicked

        
   editProductJButton.setEnabled(true);
   deleteProductJButton.setEnabled(true);  
       
        
    }//GEN-LAST:event_productJTableMouseClicked

    private void addProductIDJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addProductIDJTextFieldKeyTyped
        
        char c =evt.getKeyChar();
       if(((c==KeyEvent.VK_SPACE) ) ){
           evt.consume();
       }
        
        
    }//GEN-LAST:event_addProductIDJTextFieldKeyTyped

    private void addNameJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addNameJTextFieldKeyTyped
        
        
        char c =evt.getKeyChar();
       if(!(Character.isLetterOrDigit(c) || (c== KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE) || (c==KeyEvent.VK_SPACE)  ) ){
           evt.consume();
       }
        
    }//GEN-LAST:event_addNameJTextFieldKeyTyped

    private void addItemsAvailableJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addItemsAvailableJTextFieldKeyTyped
        
        
        char c =evt.getKeyChar();
       if(!(Character.isDigit(c) || (c== KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)) ){
           evt.consume();
       }   
        
    }//GEN-LAST:event_addItemsAvailableJTextFieldKeyTyped

    private void addPriceJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addPriceJTextFieldKeyTyped
        
        
        char c =evt.getKeyChar();
       if(!(Character.isDigit(c) || (c== KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)) ){
           evt.consume();
       }   
        
    }//GEN-LAST:event_addPriceJTextFieldKeyTyped

    private void editProductIDJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editProductIDJTextFieldKeyTyped
        
        char c =evt.getKeyChar();
       if(((c==KeyEvent.VK_SPACE) ) ){
           evt.consume();
       }
        
        
    }//GEN-LAST:event_editProductIDJTextFieldKeyTyped

    private void editNameJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editNameJTextFieldKeyTyped
        
         char c =evt.getKeyChar();
       if(!(Character.isLetterOrDigit(c) || (c== KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE) || (c==KeyEvent.VK_SPACE)  ) ){
           evt.consume();
       }
        
        
    }//GEN-LAST:event_editNameJTextFieldKeyTyped

    private void editItemsAvailableJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editItemsAvailableJTextFieldKeyTyped
        
        
        char c =evt.getKeyChar();
       if(!(Character.isDigit(c) || (c== KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)) ){
           evt.consume();
       }
        
    }//GEN-LAST:event_editItemsAvailableJTextFieldKeyTyped

    private void editPriceJTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_editPriceJTextFieldKeyTyped
        
        char c =evt.getKeyChar();
       if(!(Character.isDigit(c) || (c== KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE)) ){
           evt.consume();
       }
        
        
    }//GEN-LAST:event_editPriceJTextFieldKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addItemsAvailableJLabel;
    private javax.swing.JTextField addItemsAvailableJTextField;
    private javax.swing.JLabel addNameJLabel;
    private javax.swing.JTextField addNameJTextField;
    private javax.swing.JLabel addPriceJLabel;
    private javax.swing.JTextField addPriceJTextField;
    private javax.swing.JRadioButton addProductActiveJRadioButton;
    private javax.swing.JLabel addProductIDJLabel;
    private javax.swing.JTextField addProductIDJTextField;
    private javax.swing.JRadioButton addProductInactiveJRadioButton;
    private javax.swing.JButton addProductJButton;
    private javax.swing.JButton addProductSubmitJButton;
    private javax.swing.JButton deleteProductJButton;
    private javax.swing.JLabel editItemsAvailableJLabel;
    private javax.swing.JTextField editItemsAvailableJTextField;
    private javax.swing.JLabel editNameJLabel;
    private javax.swing.JTextField editNameJTextField;
    private javax.swing.JLabel editPriceJLabel;
    private javax.swing.JTextField editPriceJTextField;
    private javax.swing.JRadioButton editProductActiveJRadioButton;
    private javax.swing.JLabel editProductIDJLabel;
    private javax.swing.JTextField editProductIDJTextField;
    private javax.swing.JRadioButton editProductInactiveJRadioButton;
    private javax.swing.JButton editProductJButton;
    private javax.swing.JButton editProductSubmitJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable productJTable;
    // End of variables declaration//GEN-END:variables
}
