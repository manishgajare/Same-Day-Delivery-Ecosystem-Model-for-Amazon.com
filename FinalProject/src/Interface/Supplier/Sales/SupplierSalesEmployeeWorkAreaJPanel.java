/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Supplier.Sales;

import Business.Enterprise.Supplier;
import Business.Organization.Amazon.Admin.WorkQueue;
import Business.Organization.Amazon.Admin.WorkRequest;
import Business.Organization.Supplier.Finance.SupplierFinanceOrganization;
import Business.Organization.Supplier.Sales.SupplierSalesOrganization;
import Business.UserAccount.UserAccount;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manish Gajare
 */
public class SupplierSalesEmployeeWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierSalesEmployeeWorkAreaJPanel
     */
    
    JPanel userProcessContainer;
    UserAccount account;
    SupplierSalesOrganization salesOrganization;
    WorkQueue workQueue;
    Supplier supplier;
    
    public SupplierSalesEmployeeWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, SupplierSalesOrganization salesOrganization, WorkQueue workQueue, Supplier supplier) {
        initComponents();
        
    this.userProcessContainer = userProcessContainer;
    this.account = account;
    this.salesOrganization = salesOrganization;
    this.workQueue = workQueue;
    this.supplier = supplier;
   
    populateOrderProcessJTable();
    
    assignJButton.setEnabled(false);
    packagingDoneJButton.setEnabled(false);
    approveJButton.setEnabled(false);
        
    }
    
    
    

    
    public void populateOrderProcessJTable(){
        
        
        int rowCount = orderProcessjTable.getRowCount();
        for(int i=rowCount-1; i>=0; i--){
            ((DefaultTableModel)orderProcessjTable.getModel()).removeRow(i);
        }
        
        for(WorkRequest workRequest:workQueue.getWorkQueue()){
            if(workRequest.getPayment().getInvoice().getOrderItem().get(0).getSupplier().equals(supplier)){
               
                
                
                Object row[] = new Object[7];
                row[0] = workRequest;
                row[1] = workRequest.getPayment().getInvoice().getStatus();
                row[2] = workRequest.getStatus();
                row[3] = workRequest.getBeginningTime().getTime().toString();
                row[4] = workRequest.getToBeDeliveredBy().getTime().toString();
                
                
                if(workRequest.getEndingTime()==null)
                    row[5] = "Not Delivered Yet";
                else    
                    row[5] = workRequest.getEndingTime().getTime().toString();
                
                if(workRequest.getPenalized()==null)
                    row[6] = "---";
                else    
                    row[6] = workRequest.getPenalized();
                

            ((DefaultTableModel)orderProcessjTable.getModel()).addRow(row);
                
                
            }
            
        }
        
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        amountValueJLabel = new javax.swing.JLabel();
        orderedItemsValueJLabel = new javax.swing.JLabel();
        orderedItemsJLabel = new javax.swing.JLabel();
        shippingAddressValueJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderProcessjTable = new javax.swing.JTable();
        shippingAddressJLabel = new javax.swing.JLabel();
        amountJLabel = new javax.swing.JLabel();
        assignJButton = new javax.swing.JButton();
        packagingDoneJButton = new javax.swing.JButton();
        approveJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        amountValueJLabel.setBackground(new java.awt.Color(204, 204, 204));
        amountValueJLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(amountValueJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 228, 165, 19));

        orderedItemsValueJLabel.setBackground(new java.awt.Color(204, 204, 204));
        orderedItemsValueJLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(orderedItemsValueJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(311, 181, 775, 29));

        orderedItemsJLabel.setText("Ordered Items:");
        add(orderedItemsJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 187, -1, -1));

        shippingAddressValueJLabel.setBackground(new java.awt.Color(204, 204, 204));
        shippingAddressValueJLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        add(shippingAddressValueJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(309, 265, 777, 21));

        orderProcessjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Invoice ID", "Payment Status", "Order Status", "Ordered on", "To be Delivered by", "Delivered on", "Penalized?"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderProcessjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderProcessjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(orderProcessjTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 57, 1096, 106));

        shippingAddressJLabel.setText("Shipping Address:");
        add(shippingAddressJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 265, -1, -1));

        amountJLabel.setText("Amount:");
        add(amountJLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 228, -1, -1));

        assignJButton.setText("Assign");
        assignJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignJButtonActionPerformed(evt);
            }
        });
        add(assignJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, -1, -1));

        packagingDoneJButton.setText("Packaging Done");
        packagingDoneJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                packagingDoneJButtonActionPerformed(evt);
            }
        });
        add(packagingDoneJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 300, -1, -1));

        approveJButton.setText("Approve");
        approveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveJButtonActionPerformed(evt);
            }
        });
        add(approveJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 300, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void orderProcessjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderProcessjTableMouseClicked

        WorkRequest wr = (WorkRequest)orderProcessjTable.getValueAt(orderProcessjTable.getSelectedRow(), 0);

        if(wr.getStatus().equals(WorkRequest.UNDER_PROCESS)){
        assignJButton.setEnabled(true);
        packagingDoneJButton.setEnabled(false);
        approveJButton.setEnabled(false);
        }else if(wr.getStatus().equals(WorkRequest.PACKAGING_PROCESS)){
            assignJButton.setEnabled(false);
            packagingDoneJButton.setEnabled(true);
            approveJButton.setEnabled(false);
        }else if(wr.getStatus().equals(WorkRequest.RETURN_REQUEST)){
            assignJButton.setEnabled(false);
            packagingDoneJButton.setEnabled(false);
            approveJButton.setEnabled(true);
        }
        

       String orderedItems="";
        
        for(int i=0;i<wr.getPayment().getInvoice().getOrderItem().size();i++){
            orderedItems = orderedItems+"  "+wr.getPayment().getInvoice().getOrderItem().get(i).getProduct().getName()+" - "+wr.getPayment().getInvoice().getOrderItem().get(i).getQuantity()+"  ";
           
        }

        orderedItemsValueJLabel.setText(orderedItems);
        amountValueJLabel.setText(String.valueOf(wr.getPayment().getInvoice().getAmount()));
        shippingAddressValueJLabel.setText(wr.getPayment().getInvoice().getShippingAddress());

    }//GEN-LAST:event_orderProcessjTableMouseClicked

    private void assignJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignJButtonActionPerformed

        WorkRequest wr = (WorkRequest)orderProcessjTable.getValueAt(orderProcessjTable.getSelectedRow(), 0);
        wr.setStatus(WorkRequest.PACKAGING_PROCESS);
        wr.setPackagingProcess(account);
        populateOrderProcessJTable();
        assignJButton.setEnabled(false);
        

    }//GEN-LAST:event_assignJButtonActionPerformed

    private void packagingDoneJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packagingDoneJButtonActionPerformed

        WorkRequest wr = (WorkRequest)orderProcessjTable.getValueAt(orderProcessjTable.getSelectedRow(), 0);
        wr.setStatus(WorkRequest.PACKAGING_DONE);
        wr.setPackaged(account);
        populateOrderProcessJTable();
        packagingDoneJButton.setEnabled(false);
        
        
    }//GEN-LAST:event_packagingDoneJButtonActionPerformed

    private void approveJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveJButtonActionPerformed

      WorkRequest wr = (WorkRequest)orderProcessjTable.getValueAt(orderProcessjTable.getSelectedRow(), 0);
        wr.setStatus(WorkRequest.RETURN_REQUEST_APPROVED);
        wr.setReturnApproved(account);
        populateOrderProcessJTable();
        approveJButton.setEnabled(false);  
        
        
    }//GEN-LAST:event_approveJButtonActionPerformed

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountJLabel;
    private javax.swing.JLabel amountValueJLabel;
    private javax.swing.JButton approveJButton;
    private javax.swing.JButton assignJButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderProcessjTable;
    private javax.swing.JLabel orderedItemsJLabel;
    private javax.swing.JLabel orderedItemsValueJLabel;
    private javax.swing.JButton packagingDoneJButton;
    private javax.swing.JLabel shippingAddressJLabel;
    private javax.swing.JLabel shippingAddressValueJLabel;
    // End of variables declaration//GEN-END:variables
}
