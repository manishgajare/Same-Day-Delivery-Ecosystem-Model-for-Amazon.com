/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Customer.CustomerRole;

import Business.Customer.CustomerAccount;
import Business.DB4OUtil.DB4OUtil;
import Business.EcoSystem;
import Business.Enterprise.Amazon;
import Business.Enterprise.Supplier;
import Business.Organization.Amazon.Admin.AmazonAdminOrganization;
import Business .Organization.Amazon.Admin.WorkQueue;
import Business.Organization.Amazon.Admin.WorkRequest;
import Business.Organization.Amazon.Finance.Invoice;
import Business.Organization.Amazon.Sales.AmazonSalesOrganization;
import Business.Organization.Amazon.Sales.MasterOrderCatalog;
import Business.Organization.Amazon.Sales.Order;
import Business.Organization.Amazon.Sales.OrderItem;
import java.util.Calendar;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Manish Gajare
 */
public class CustomerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerWorkAreaJPanel
     */
    
    JPanel userProcessContainer; 
    EcoSystem system; 
    DB4OUtil db4OUtil;
    CustomerAccount customerAccount;
    Amazon amazonEnterprise;
    WorkQueue workQueue;
    MasterOrderCatalog masterOrderCatalog;
    
    
    public CustomerWorkAreaJPanel(JPanel userProcessContainer, EcoSystem system,CustomerAccount customerAccount, DB4OUtil db4OUtil,Amazon amazonEnterprise) {
        initComponents();
    
    this.userProcessContainer = userProcessContainer;
    this.system = system;
    this.db4OUtil = db4OUtil;
    this.customerAccount = customerAccount;
    this.amazonEnterprise = amazonEnterprise;
    
    
    WorkQueue workQueue = null;
    MasterOrderCatalog masterOrderCatalog = null;
            
         for(int i=0; amazonEnterprise.getOrganizationDirectory().getOrganizationList().size()>i;i++){
             
             if(amazonEnterprise.getOrganizationDirectory().getOrganizationList().get(i) instanceof AmazonAdminOrganization)
             {
                 AmazonAdminOrganization amazonAdminOrganization = (AmazonAdminOrganization)amazonEnterprise.getOrganizationDirectory().getOrganizationList().get(i);
                 workQueue = amazonAdminOrganization.getWorkQueue();
             }
              if(amazonEnterprise.getOrganizationDirectory().getOrganizationList().get(i) instanceof AmazonSalesOrganization)
             {
                 AmazonSalesOrganization amazonSalesOrganization = (AmazonSalesOrganization)amazonEnterprise.getOrganizationDirectory().getOrganizationList().get(i);
                 masterOrderCatalog = amazonSalesOrganization.getMasterOrderCatalog();
             }

returnProductJButton.setEnabled(false);
         
         }
    
         this.workQueue = workQueue;
         this.masterOrderCatalog = masterOrderCatalog;
    populateOrderProcessJTable();
    }

    
    
    public void populateOrderProcessJTable(){
        
        
        int rowCount = orderProcessjTable.getRowCount();
        for(int i=rowCount-1; i>=0; i--){
            ((DefaultTableModel)orderProcessjTable.getModel()).removeRow(i);
        }
        
        for(WorkRequest workRequest:workQueue.getWorkQueue()){
            if(workRequest.getCustomerAccount().equals(customerAccount)){
               
                
                
                Object row[] = new Object[7];
                row[0] = workRequest;
                row[1] = workRequest.getStatus();
                row[2] = workRequest.getBeginningTime().getTime().toString();
                row[3] = workRequest.getToBeDeliveredBy().getTime().toString();
                
                
                if(workRequest.getEndingTime()==null)
                    row[4] = "Not Delivered Yet";
                else    
                    row[4] = workRequest.getEndingTime().getTime().toString();
                
               
                

            ((DefaultTableModel)orderProcessjTable.getModel()).addRow(row);
                
                
            }
            
        }
        
        
    }

    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        returnProductJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderProcessjTable = new javax.swing.JTable();
        amountValueJLabel = new javax.swing.JLabel();
        orderedItemsValueJLabel = new javax.swing.JLabel();
        orderedItemsJLabel = new javax.swing.JLabel();
        shippingAddressValueJLabel = new javax.swing.JLabel();
        shippingAddressJLabel = new javax.swing.JLabel();
        amountJLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        confirmationNumberValueJLabel = new javax.swing.JLabel();

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setText("Customer Role Work Area");

        returnProductJButton.setText("return product");
        returnProductJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnProductJButtonActionPerformed(evt);
            }
        });

        orderProcessjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Invoice ID", "Order Status", "Ordered on", "To be Delivered by", "Delivered on"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderProcessjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderProcessjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(orderProcessjTable);

        amountValueJLabel.setBackground(new java.awt.Color(204, 204, 204));
        amountValueJLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        orderedItemsValueJLabel.setBackground(new java.awt.Color(204, 204, 204));
        orderedItemsValueJLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        orderedItemsJLabel.setText("Ordered Items:");

        shippingAddressValueJLabel.setBackground(new java.awt.Color(204, 204, 204));
        shippingAddressValueJLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        shippingAddressJLabel.setText("Shipping Address:");

        amountJLabel.setText("Amount:");

        jLabel2.setText("Confirmation Number:");

        confirmationNumberValueJLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(confirmationNumberValueJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(orderedItemsJLabel)
                                .addGap(32, 32, 32)
                                .addComponent(orderedItemsValueJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 775, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(amountJLabel)
                                .addGap(63, 63, 63)
                                .addComponent(amountValueJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(shippingAddressJLabel)
                                .addGap(18, 18, 18)
                                .addComponent(shippingAddressValueJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(352, 352, 352)
                        .addComponent(returnProductJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(657, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(orderedItemsJLabel))
                    .addComponent(orderedItemsValueJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(amountJLabel)
                    .addComponent(amountValueJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(shippingAddressValueJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(shippingAddressJLabel))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(confirmationNumberValueJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(returnProductJButton)
                .addContainerGap(215, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void returnProductJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnProductJButtonActionPerformed

        Calendar cal = Calendar.getInstance();
            

    WorkRequest wr = (WorkRequest)orderProcessjTable.getValueAt(orderProcessjTable.getSelectedRow(), 0);
    if(wr.getCanBereturnedTill().after(cal)){
        
        wr.setStatus(WorkRequest.RETURN_REQUEST);
        
        populateOrderProcessJTable();
        returnProductJButton.setEnabled(false);
        
    }
    else{
        
        System.out.println("return request not valid");
        
    }
    
    returnProductJButton.setEnabled(false);
    populateOrderProcessJTable();
   
    
    }//GEN-LAST:event_returnProductJButtonActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
     
        
    }//GEN-LAST:event_formMouseClicked

    private void orderProcessjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderProcessjTableMouseClicked

        WorkRequest wr = (WorkRequest)orderProcessjTable.getValueAt(orderProcessjTable.getSelectedRow(), 0);

        if(wr.getStatus().equals(WorkRequest.SHIPPING_DONE)){
        returnProductJButton.setEnabled(true);
        }
        

        String orderedItems="";
        
        for(int i=0;i<wr.getPayment().getInvoice().getOrderItem().size();i++){
            orderedItems = orderedItems+"  "+wr.getPayment().getInvoice().getOrderItem().get(i).getProduct().getName()+" - "+wr.getPayment().getInvoice().getOrderItem().get(i).getQuantity()+"  ";
           
        }

        orderedItemsValueJLabel.setText(orderedItems);
        amountValueJLabel.setText(String.valueOf(wr.getPayment().getInvoice().getAmount()));
        shippingAddressValueJLabel.setText(wr.getPayment().getInvoice().getShippingAddress());
        confirmationNumberValueJLabel.setText(String.valueOf(wr.getPayment().getConfirmationNumber()));
        
        
 
    }//GEN-LAST:event_orderProcessjTableMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountJLabel;
    private javax.swing.JLabel amountValueJLabel;
    private javax.swing.JLabel confirmationNumberValueJLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orderProcessjTable;
    private javax.swing.JLabel orderedItemsJLabel;
    private javax.swing.JLabel orderedItemsValueJLabel;
    private javax.swing.JButton returnProductJButton;
    private javax.swing.JLabel shippingAddressJLabel;
    private javax.swing.JLabel shippingAddressValueJLabel;
    // End of variables declaration//GEN-END:variables
}
